[{"C:\\Users\\Emml\\cuisine\\src\\App.js":"1","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\CocktailRandom.js":"2","C:\\Users\\Emml\\cuisine\\src\\cards\\ShowFoodCard.js":"3","C:\\Users\\Emml\\cuisine\\src\\components\\FetchRecipes.js":"4","C:\\Users\\Emml\\cuisine\\src\\components\\SearchResults.js":"5","C:\\Users\\Emml\\cuisine\\src\\components\\form.js":"6","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\RandomCocktailGenerator.js":"7","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\CocktailForm.js":"8","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\CocktailResults.js":"9","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\CocktailMain.js":"10","C:\\Users\\Emml\\cuisine\\src\\components\\ShowFood.js":"11","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\ShowCocktail.js":"12","C:\\Users\\Emml\\cuisine\\src\\cards\\ShowDrinkCard.js":"13","C:\\Users\\Emml\\cuisine\\src\\reportWebVitals.js":"14","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\Alcohol.js":"15","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\Pagination.js":"16","C:\\Users\\Emml\\cuisine\\src\\cards\\FavouriteDrinkCard.js":"17","C:\\Users\\Emml\\cuisine\\src\\humburger\\Menu.js":"18","C:\\Users\\Emml\\cuisine\\src\\components\\Random.js":"19","C:\\Users\\Emml\\cuisine\\src\\datasource\\DataSource.js":"20","C:\\Users\\Emml\\cuisine\\src\\index.js":"21","C:\\Users\\Emml\\cuisine\\src\\components\\Main.js":"22","C:\\Users\\Emml\\cuisine\\src\\components\\FavouriteList.js":"23","C:\\Users\\Emml\\cuisine\\src\\components\\Nav.js":"24","C:\\Users\\Emml\\cuisine\\src\\components\\Welcome.js":"25","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\NonAlcohol.js":"26","C:\\Users\\Emml\\cuisine\\src\\components\\RandomGenerator.js":"27","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\PaginationNonAlcohol.js":"28","C:\\Users\\Emml\\cuisine\\src\\components\\IngredientMianPage.js":"29","C:\\Users\\Emml\\cuisine\\src\\components\\SingleIngredientPage.js":"30","C:\\Users\\Emml\\cuisine\\src\\humburger\\Close.js":"31","C:\\Users\\Emml\\cuisine\\src\\components\\Spinner.js":"32","C:\\Users\\Emml\\cuisine\\src\\components\\useLocalStorage.js":"33","C:\\Users\\Emml\\cuisine\\src\\components\\FrontPageIngredients.js":"34","C:\\Users\\Emml\\cuisine\\src\\components\\FrontPageCategories.js":"35","C:\\Users\\Emml\\cuisine\\src\\cards\\FavouriteCard.js":"36","C:\\Users\\Emml\\cuisine\\src\\components\\CategoryMainPage.js":"37","C:\\Users\\Emml\\cuisine\\src\\components\\Loader.js":"38","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\FrontCockIngredient.js":"39","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\IngredientCockMainPage.js":"40","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\SingleCockIngredientPage.js":"41","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\FrontPageCockCategories.js":"42","C:\\Users\\Emml\\cuisine\\src\\components\\ScrollToTop.js":"43"},{"size":342,"mtime":1623896618419,"results":"44","hashOfConfig":"45"},{"size":1880,"mtime":1624112142493,"results":"46","hashOfConfig":"45"},{"size":4311,"mtime":1623901287376,"results":"47","hashOfConfig":"45"},{"size":14844,"mtime":1624066584479,"results":"48","hashOfConfig":"45"},{"size":3556,"mtime":1624215085341,"results":"49","hashOfConfig":"45"},{"size":1037,"mtime":1624112305343,"results":"50","hashOfConfig":"45"},{"size":2176,"mtime":1623902527125,"results":"51","hashOfConfig":"45"},{"size":1013,"mtime":1624078915113,"results":"52","hashOfConfig":"45"},{"size":4182,"mtime":1624215128044,"results":"53","hashOfConfig":"45"},{"size":1744,"mtime":1623826165770,"results":"54","hashOfConfig":"45"},{"size":4126,"mtime":1623668267618,"results":"55","hashOfConfig":"45"},{"size":3075,"mtime":1624077586069,"results":"56","hashOfConfig":"45"},{"size":5118,"mtime":1624077586036,"results":"57","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"58","hashOfConfig":"45"},{"size":2728,"mtime":1623902727054,"results":"59","hashOfConfig":"45"},{"size":2815,"mtime":1607520894278,"results":"60","hashOfConfig":"45"},{"size":1944,"mtime":1608435926612,"results":"61","hashOfConfig":"45"},{"size":449,"mtime":1607295581679,"results":"62","hashOfConfig":"45"},{"size":1819,"mtime":1624108927383,"results":"63","hashOfConfig":"45"},{"size":5604,"mtime":1623825461302,"results":"64","hashOfConfig":"45"},{"size":500,"mtime":499162500000,"results":"65","hashOfConfig":"45"},{"size":1628,"mtime":1624118920255,"results":"66","hashOfConfig":"45"},{"size":4346,"mtime":1623406661287,"results":"67","hashOfConfig":"45"},{"size":3178,"mtime":1624015489233,"results":"68","hashOfConfig":"45"},{"size":1502,"mtime":1608262474008,"results":"69","hashOfConfig":"45"},{"size":3782,"mtime":1623902754725,"results":"70","hashOfConfig":"45"},{"size":1643,"mtime":1623904324706,"results":"71","hashOfConfig":"45"},{"size":2778,"mtime":1607521161436,"results":"72","hashOfConfig":"45"},{"size":3523,"mtime":1624070126336,"results":"73","hashOfConfig":"45"},{"size":4077,"mtime":1624078478435,"results":"74","hashOfConfig":"45"},{"size":434,"mtime":1607295581424,"results":"75","hashOfConfig":"45"},{"size":473,"mtime":1606625199822,"results":"76","hashOfConfig":"45"},{"size":2647,"mtime":1606490207505,"results":"77","hashOfConfig":"45"},{"size":1622,"mtime":1624069788638,"results":"78","hashOfConfig":"45"},{"size":2792,"mtime":1624149213987,"results":"79","hashOfConfig":"45"},{"size":1893,"mtime":1608435926454,"results":"80","hashOfConfig":"45"},{"size":3970,"mtime":1623904383192,"results":"81","hashOfConfig":"45"},{"size":432,"mtime":1606627492331,"results":"82","hashOfConfig":"45"},{"size":1652,"mtime":1624072379767,"results":"83","hashOfConfig":"45"},{"size":3577,"mtime":1624072545636,"results":"84","hashOfConfig":"45"},{"size":4785,"mtime":1624074220625,"results":"85","hashOfConfig":"45"},{"size":3337,"mtime":1624215010005,"results":"86","hashOfConfig":"45"},{"size":1143,"mtime":1623897310640,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"ndiec7",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\Users\\Emml\\cuisine\\src\\App.js",[],["183","184"],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\CocktailRandom.js",[],"C:\\Users\\Emml\\cuisine\\src\\cards\\ShowFoodCard.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\FetchRecipes.js",["185","186","187","188","189","190"],"// /* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, withRouter, useHistory, useLocation } from \"react-router-dom\";\r\nimport useLocalStorage from \"../components/useLocalStorage\"\r\nimport Alcohol from \"../componentsCocktail/Alcohol\";\r\nimport CocktailMain from \"../componentsCocktail/CocktailMain\";\r\nimport NonAlcohol from \"../componentsCocktail/NonAlcohol\";\r\nimport ShowCocktail from \"../componentsCocktail/ShowCocktail\";\r\nimport FavouriteList from \"./FavouriteList\";\r\nimport Main from \"./Main\";\r\nimport Nav from \"./Nav\";\r\nimport ShowFood from \"./ShowFood\";\r\nimport Spinner from \"./Spinner\";\r\nimport Loader from './Loader';\r\nimport Welcome from \"./Welcome\";\r\nimport SearchResults from \"./SearchResults\";\r\nimport CocktailResults from '../componentsCocktail/CocktailResults'\r\nimport IngredientMianPage from \"./IngredientMianPage\";\r\nimport SingleIngredientPage from \"./SingleIngredientPage\";\r\nimport CategoryMainPage from \"./CategoryMainPage\";\r\nimport IngredientCockMainPage from \"../componentsCocktail/IngredientCockMainPage\";\r\nimport SingleCockIngredientPage from \"../componentsCocktail/SingleCockIngredientPage\";\r\n\r\n// const API_KEY = `${process.env.REACT_APP_FOOD_API_KEY}`,\r\n//     url = \"https://www.themealdb.com/api/json/v1/1/search.php?\",\r\n//     drinksUrl = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?\",\r\n//     AlcoholUrl = \"https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=Alcoholic\",\r\n//     nonAlcoholUrl = \"https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=Non_Alcoholic\";\r\n\r\nconst API_KEY = 1\r\nconst API_KEY1 = `${process.env.REACT_APP_FOOD_API_KEY}`\r\n//const url = `https://www.themealdb.com/api/json/v1/${API_KEY}/search.php?`\r\nconst url = `https://www.themealdb.com/api/json/v1/`\r\nconst url1 = `https://www.themealdb.com/api/json/v2/`\r\n//const drinksUrl = `https://www.thecocktaildb.com/api/json/v1/${1}/search.php?`\r\nconst cocktailUrl = `https://www.thecocktaildb.com/api/json/v1/`\r\nconst cocktailUrl1 = `https://www.thecocktaildb.com/api/json/v2/`\r\n// const AlcoholUrl = `https://www.thecocktaildb.com/api/json/v1/${1}/filter.php?a=Alcoholic`\r\nconst AlcoholUrl = `https://www.thecocktaildb.com/api/json/v1/`\r\n// const nonAlcoholUrl = `https://www.thecocktaildb.com/api/json/v1/${1}/filter.php?a=Non_Alcoholic`\r\nconst nonAlcoholUrl = `https://www.thecocktaildb.com/api/json/v1/`\r\n\r\n\r\n\r\n\r\nconst FetchRecipes = () => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    //======== Making a random selection of  meals and drinks =========\r\n    // let meals = [\"cheese\", \"butter\", \"meat\"];\r\n    // let cocks = [\"margarita\", \"smoothie\", \"chocolate\"];\r\n    // let defaultRecipes = meals.sort(() => Math.random() - 0.5)[0];\r\n    // let defaultCocktail = cocks.sort(() => Math.random() - 0.5)[0];\r\n\r\n\r\n    const [recipe, setRecipe] = useState([]);\r\n    const [alcohol, setAlcohol] = useState([]);\r\n    const [nonAlcohol, setNonAlcohol] = useState([]);\r\n    const [cocktail, setCocktail] = useState([]);\r\n    const [randomRecipe, setRandomRecipe] = useState(\"\");\r\n    const [randomCocktail, setRandomCocktail] = useState(\"\");\r\n    const [randomRecipeGenerator, setRandomRecipeGenerator] = useState([]);\r\n    const [randomCocktailGenerator, setRandomCocktailGenerator] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [queryDrinks, setQueryDrinks] = useState(\"\");\r\n    const [foodQuery, setfoodQuery] = useLocalStorage(\"foodQuery\", \"\");\r\n    const [cockQuery, setCookQuery] = useLocalStorage(\"cockQuery\", \"\");\r\n    const [error, setError] = useState(false);\r\n    const [errorDrinks, setErrorDrinks] = useState(false);\r\n    const [errorRecipeGenerator, setErrorRecipeGenerator] = useState(false);\r\n    const [errorCocktailGenerator, setErrorCocktailGenerator] = useState(false);\r\n    const [randError, setRandError] = useState(false);\r\n    const [catItem, setCatItem] = useState(false);\r\n\r\n\r\n    //=================== function to select category item =================\r\n    const selectCategoryItem = (itm) => {\r\n        setCatItem(itm)\r\n    }\r\n\r\n    //======================= Search function for Meals=====================\r\n    const searchRecipe = async () => {\r\n\r\n        const recipeFeed = await fetch(`${url}${API_KEY}/search.php?s=${query}`)\r\n\r\n        if (query !== \"\") {\r\n            try {\r\n                const searchedmeal = await recipeFeed.json();\r\n                setRecipe(searchedmeal.meals);\r\n                setfoodQuery(query);\r\n                setError(\"\");\r\n                if (searchedmeal.meals === null) {\r\n                    setError(<div>\r\n                        <Loader />\r\n                        <div style={errormsg}>Recipe <h4 style={{ color: 'red' }}>{query}</h4> is Not Available</div>\r\n                    </div>);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        else {\r\n            setError(returnErrorDiv());\r\n        }\r\n    }\r\n\r\n    //======================= Search function Drinks ======================\r\n    const searchCocktail = async () => {\r\n        const cocktailFeed = await fetch(`${cocktailUrl}${API_KEY}/search.php?s=${queryDrinks}`)\r\n\r\n        if (queryDrinks !== \"\") {\r\n            try {\r\n                const searchedcocktail = await cocktailFeed.json();\r\n                setCocktail(searchedcocktail.drinks);\r\n                setCookQuery(queryDrinks)\r\n                setErrorDrinks(\"\");\r\n\r\n                if (searchedcocktail.drinks === null) {\r\n                    setErrorDrinks(<div>\r\n                        <Loader />\r\n                        <div style={errormsg}>Cocktail <h4 style={{ color: 'red' }}>{queryDrinks}</h4> is Not Available</div>\r\n                    </div>);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        else {\r\n            setErrorDrinks(returnErrorDiv());\r\n        }\r\n    }\r\n\r\n    const returnErrorDiv = () => {\r\n        return (\r\n            <div className=\"error-wrapper\">\r\n                <div> <span> No Results Found...</span>\r\n                    <span className=\"emotions\">😕</span>\r\n                </div>\r\n                <div>Please try again <span className=\"emotions1\">😊</span></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const onChange = e => setQuery(e.target.value);\r\n    const handleOnChange = e => setQueryDrinks(e.target.value);\r\n\r\n    //======= Navigation functions to search page ========\r\n    const goToSearchPage = () => {\r\n        history.push(\"/searchrecipes\");\r\n    }\r\n\r\n    const goToSearchedCocktailPage = () => {\r\n        history.push(\"/searchcocktailrecipes\");\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        goToSearchPage();\r\n        searchRecipe();\r\n    };\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        goToSearchedCocktailPage();\r\n        searchCocktail();\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const generateRandomRecipes = async () => {\r\n\r\n            const recipeRandomFeed = await fetch(`${url1}${API_KEY1}/randomselection.php`)\r\n\r\n            if (recipeRandomFeed) {\r\n                try {\r\n                    const randomizedMeal = await recipeRandomFeed.json();\r\n                    setRandomRecipeGenerator(randomizedMeal.meals)\r\n                    setErrorRecipeGenerator(null);\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setErrorRecipeGenerator(<span>Not Available</span>);\r\n            }\r\n        }\r\n\r\n        const randomRecipe = async () => {\r\n\r\n            const recipeFeed = await fetch(`${url}${API_KEY}/random.php`)\r\n\r\n            if (recipeFeed) {\r\n                try {\r\n                    const randomMeal = await recipeFeed.json();\r\n                    setRandomRecipe(randomMeal.meals)\r\n                    setRandError(null);\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setRandError(<span>Not Available</span>);\r\n            }\r\n        }\r\n\r\n        //generateRandomRecipes();\r\n        randomRecipe();\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const generateRandomCocktails = async () => {\r\n\r\n            const cocktailRandomFeed = await fetch(`${cocktailUrl1}${API_KEY1}/randomselection.php`)\r\n\r\n            if (cocktailRandomFeed) {\r\n                try {\r\n                    const randomPickedCocktail = await cocktailRandomFeed.json();\r\n                    setRandomCocktailGenerator(randomPickedCocktail.drinks)\r\n                    setErrorCocktailGenerator(null);\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setErrorCocktailGenerator(<span>Not Available</span>);\r\n            }\r\n        }\r\n\r\n        const randomizedCocktail = async () => {\r\n\r\n            const cocktailFeed = await fetch(`${cocktailUrl}${API_KEY}/random.php`)\r\n\r\n            if (cocktailFeed) {\r\n                try {\r\n                    const randomDrink = await cocktailFeed.json();\r\n                    setRandomCocktail(randomDrink.drinks)\r\n                    setRandError(null);\r\n\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setRandError(<span>Not Available</span>);\r\n            }\r\n        }\r\n\r\n        //generateRandomCocktails();\r\n        randomizedCocktail();\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const alcoholicCocktail = async () => {\r\n\r\n            const alcoholFeed = await fetch(`${cocktailUrl}${API_KEY}/filter.php?a=Alcoholic`);\r\n\r\n            if (alcoholFeed) {\r\n                try {\r\n                    const alcoholDrink = await alcoholFeed.json();\r\n                    setAlcohol(alcoholDrink.drinks)\r\n                    setError(null);\r\n\r\n                    if (alcoholDrink.drinks === null) {\r\n                        setError(<span> Cocktail Not Available</span>);\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setError(<span>Not Available</span>);\r\n            }\r\n        }\r\n\r\n\r\n        const nonAlcoholicCocktail = async () => {\r\n\r\n            const nonAlcoholFeed = await fetch(`${cocktailUrl}${API_KEY}/filter.php?a=Non_Alcoholic`);\r\n            if (nonAlcoholFeed) {\r\n\r\n                try {\r\n                    const nonAlcoholDrink = await nonAlcoholFeed.json();\r\n                    setNonAlcohol(nonAlcoholDrink.drinks)\r\n                    setError(null);\r\n\r\n                    if (nonAlcoholDrink.drinks === null) {\r\n                        setError(<span> Cocktail Not Available</span>);\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setError(<span>Not Available</span>);\r\n            }\r\n        }\r\n        alcoholicCocktail();\r\n        nonAlcoholicCocktail();\r\n    }, [])\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Nav />\r\n            {((randomRecipe && Object.keys(randomRecipe).length)) ?\r\n                <>\r\n                    <Switch location={location} key={location.pathname}>\r\n\r\n                        <Route path=\"/favouriteList\">\r\n                            <FavouriteList />\r\n                        </Route>\r\n\r\n                        <Route path=\"/meals/:id/:name\">\r\n                            <ShowFood recipe={recipe} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/drinks/:id/:name\">\r\n                            <ShowCocktail cocktail={cocktail} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/nonalcohol\">\r\n                            <NonAlcohol data={nonAlcohol} itemsPerPage={8} startFrom={1} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/alcohol\">\r\n                            <Alcohol alcohol={alcohol} itemsPerPage={8} startFrom={1} />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/cocktail\">\r\n                            <CocktailMain randomCocktailGenerator={randomCocktailGenerator} errorCocktailGenerator={errorCocktailGenerator} randomCocktail={randomCocktail} errorDrinks={errorDrinks} randError={randError} handleOnChange={handleOnChange} handleOnSubmit={handleOnSubmit} />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/searchcocktailrecipes\">\r\n                            <CocktailResults cocktail={cocktail} queryDrinks={queryDrinks} cockQuery={cockQuery} handleOnChange={handleOnChange} handleOnSubmit={handleOnSubmit} errorDrinks={errorDrinks} />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/searchrecipes\">\r\n                            <SearchResults recipe={recipe} query={query} foodQuery={foodQuery} onChange={onChange} onSubmit={onSubmit} error={error} />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/ingredientmainpage\">\r\n                            <IngredientMianPage />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/singleingredientpage/:name\">\r\n                            <SingleIngredientPage />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/singlecocktailingredientpage/:name\">\r\n                            <SingleCockIngredientPage />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/cocktailingredientmainpage\">\r\n                            <IngredientCockMainPage />\r\n                        </Route>\r\n\r\n\r\n                        <Route exact path=\"/categoryitempage/:name\">\r\n                            <CategoryMainPage />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/recipes\">\r\n                            <Main\r\n                                randomRecipeGenerator={randomRecipeGenerator} randomRecipe={randomRecipe}\r\n                                randError={randError} errorRecipeGenerator={errorRecipeGenerator}\r\n                                searchRecipe={searchRecipe} onChange={onChange} onSubmit={onSubmit} />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/\">\r\n                            <Welcome />\r\n                        </Route>\r\n\r\n                    </Switch>\r\n                </> : <> <Spinner /> <span style={{ display: \"none\" }}>{error}</span> </>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(FetchRecipes)\r\n\r\nconst errormsg = {\r\n    fontSize: '20px',\r\n    margin: '30px',\r\n    textAlign: 'center',\r\n};\r\n\r\n",["191","192"],"C:\\Users\\Emml\\cuisine\\src\\components\\SearchResults.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\form.js",[],["193","194"],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\RandomCocktailGenerator.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\CocktailForm.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\CocktailResults.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\CocktailMain.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\ShowFood.js",["195"],"import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\r\nimport useLocalStorage from \"../components/useLocalStorage\"\r\nimport ShowFoodCard from '../cards/ShowFoodCard';\r\nimport '../styles/showfood.css'\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst API_KEY = 1\r\nconst url5 = `https://www.themealdb.com/images/ingredients`\r\nconst url = `https://www.themealdb.com/api/json/v1/`\r\n\r\nconst ShowFood = () => {\r\n\r\n    const { id } = useParams();\r\n\r\n    const [meal, setMeal] = useState([]);\r\n    const [favoriteList, setFavoriteList] = useLocalStorage(\"favoritList\", []);\r\n\r\n    const [img, setimg] = useState([]);\r\n\r\n    //======= Navigation functions =========\r\n    const history = useHistory();\r\n    const handleClick = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const getMealDetails = async () => {\r\n\r\n            const details = await fetch(`${url}${API_KEY}/lookup.php?i=${id}`);\r\n\r\n            if (details) {\r\n                try {\r\n                    const selectedMeal = await details.json();\r\n                    setMeal(selectedMeal.meals[0])\r\n\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            } else {\r\n                setMeal([])\r\n            }\r\n        };\r\n        getMealDetails();\r\n\r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let ingredients1 = [];\r\n        let imgData = [];\r\n\r\n        if (meal) {\r\n            for (let i = 1; i <= 20; i++) {\r\n                if (meal[\"strIngredient\" + i]) {\r\n                    ingredients1.push(\r\n                        `${meal[\"strIngredient\" + i]}`\r\n                    );\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const getIngredientThumbnail = () => {\r\n            // let i = 0;\r\n            // for (i; i < ingredients1.length; i++) {\r\n            //     fetch(`${url5}/${ingredients1[i]}.png`)\r\n            //         .then((response) => response.blob())\r\n            //         .then((blob) => {\r\n            //             const objectUrl = URL.createObjectURL(blob)\r\n            //             imgData.push(objectUrl)\r\n            //             setimg(imgData)\r\n            //         })\r\n            // }\r\n            ingredients1.map((data) => {\r\n                return (\r\n                    fetch(`${url5}/${data}.png`)\r\n                        .then((response) => response.blob())\r\n                        .then((blob) => {\r\n                            const objectUrl = URL.createObjectURL(blob)\r\n                            imgData.push(objectUrl)\r\n                            setimg(imgData)\r\n                        })\r\n                )\r\n            })\r\n        }\r\n        getIngredientThumbnail();\r\n\r\n    }, [meal])\r\n\r\n    if (!(meal && Object.keys(meal).length)) {\r\n        return <Spinner />\r\n    }\r\n    \r\n    //====== Cleaning the youtube url function =======\r\n    const youtubeVideo = meal.strYoutube.replace(\"watch?v=\", \"embed/\")\r\n\r\n    //====== Adding ingredients to the measures  ======\r\n    let ingredients = [];\r\n\r\n    for (let i = 1; i <= 20; i++) {\r\n        if (meal[\"strIngredient\" + i]) {\r\n            ingredients.push(\r\n                `${meal[\"strIngredient\" + i]} - ${meal[\"strMeasure\" + i]}`\r\n            );\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n\r\n    //====== Adding items to localStorage  ====== \r\n    const addToStorage = (food) => {\r\n        if (!favoriteList.some(fav => fav.idMeal === food.idMeal)) {\r\n            setFavoriteList([...favoriteList, food])\r\n\r\n        } else {\r\n            const newList = favoriteList.filter((item) => item.idMeal !== food.idMeal)\r\n            setFavoriteList(newList)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <ShowFoodCard meal={meal} youtubeVideo={youtubeVideo} ingredients={ingredients} addToStorage={addToStorage} favoriteList={favoriteList} handleClick={handleClick} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ShowFood)\r\n","C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\ShowCocktail.js",[],"C:\\Users\\Emml\\cuisine\\src\\cards\\ShowDrinkCard.js",[],"C:\\Users\\Emml\\cuisine\\src\\reportWebVitals.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\Alcohol.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\Pagination.js",[],["196","197"],"C:\\Users\\Emml\\cuisine\\src\\cards\\FavouriteDrinkCard.js",[],"C:\\Users\\Emml\\cuisine\\src\\humburger\\Menu.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\Random.js",[],"C:\\Users\\Emml\\cuisine\\src\\datasource\\DataSource.js",["198"],"import { useState, useEffect } from 'react'\r\n\r\nconst API_KEY = 1\r\nconst API_KEY1 = `${process.env.REACT_APP_FOOD_API_KEY}`\r\n//const url = `https://www.themealdb.com/api/json/v1/${API_KEY}/search.php?`\r\nconst urlIngredient = `https://www.themealdb.com/api/json/v1/`\r\nconst urlIngredientMain = `https://www.themealdb.com/api/json/v1/`\r\nconst urlCategory = `https://www.themealdb.com/api/json/v1/`\r\nconst urlLatest = `https://www.themealdb.com/api/json/v2/`\r\nconst urlcocktail = `https://www.thecocktaildb.com/api/json/v1/`\r\nconst urlcocktail2 = `https://www.thecocktaildb.com/api/json/v2/`\r\n\r\nconst DataSource = () => {\r\n\r\n    const [ingredientList, setIngredientList] = useState(\"\");\r\n    const [ingredientCockList, setIngredientCockList] = useState(\"\");\r\n    const [ingredientMain, setIngredientMain] = useState(\"\");\r\n    const [categoryList, setCategoryList] = useState(\"\");\r\n    const [popularCockList, setpopularCockList] = useState(\"\");\r\n    const [recentMeal, setRecentMeal] = useState(\"\");\r\n    const [recentDrinks, setRecentDrinks] = useState(\"\");\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const ingredientItem = async () => {\r\n            const ingredientFeed = await fetch(`${urlIngredient}/${API_KEY}/list.php?i=list`)\r\n            if (ingredientFeed) {\r\n                try {\r\n                    const ingredientDta = await ingredientFeed.json();\r\n                    setIngredientList(ingredientDta.meals)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setIngredientList(<span>Not Available</span>);\r\n            }\r\n        }\r\n\r\n        const categoryItem = async () => {\r\n            const categoryFeed = await fetch(`${urlIngredient}/${API_KEY}/categories.php`)\r\n            if (categoryFeed) {\r\n                try {\r\n                    const categoryDta = await categoryFeed.json();\r\n                    setCategoryList(categoryDta.categories)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setCategoryList(<span>Not Available</span>);\r\n            }\r\n        }\r\n\r\n        const latestMeals = async () => {\r\n            const latestFeed = await fetch(`${urlLatest}/${API_KEY1}/latest.php`)\r\n            if (latestFeed) {\r\n                try {\r\n                    const currentMeal = await latestFeed.json();\r\n                    setRecentMeal(currentMeal.meals)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setRecentMeal(<span>Not Available</span>);\r\n            }\r\n        }\r\n\r\n\r\n        latestMeals();\r\n        categoryItem();\r\n        ingredientItem();\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const filterMainIngredient = async () => {\r\n            const ingredientMianFeed = await fetch(`${urlIngredientMain}${API_KEY}/filter.php?i=${query}`)\r\n            if (ingredientMianFeed.status === 200) {\r\n                try {\r\n                    const ingredientDta = await ingredientMianFeed.json();\r\n                    setIngredientMain(ingredientDta.meals)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setIngredientMain(\"\");\r\n            }\r\n        }\r\n        filterMainIngredient();\r\n\r\n    }, [query])\r\n\r\n\r\n    useEffect(() => {\r\n        const cockIngredientItem = async () => {\r\n            const ingredientCockFeed = await fetch(`${urlcocktail}/${API_KEY}/list.php?i=list`)\r\n            if (ingredientCockFeed) {\r\n                try {\r\n                    const ingredientCocktDta = await ingredientCockFeed.json();\r\n                    setIngredientCockList(ingredientCocktDta.drinks)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setIngredientList(<span>Not Available</span>);\r\n            }\r\n        }\r\n        cockIngredientItem();\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const popularCockItem = async () => {\r\n            const popularCockFeed = await fetch(`${urlcocktail2}/${API_KEY1}/popular.php`)\r\n            if (popularCockFeed) {\r\n                try {\r\n                    const popularCockDta = await popularCockFeed.json();\r\n                    setpopularCockList(popularCockDta.drinks)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setpopularCockList(<span>Not Available</span>);\r\n            }\r\n        }\r\n\r\n\r\n        const latestDrinks = async () => {\r\n            const latestCockFeed = await fetch(`${urlcocktail2}/${API_KEY1}/latest.php`)\r\n            if (latestCockFeed) {\r\n                try {\r\n                    const currentDrinks = await latestCockFeed.json();\r\n                    setRecentDrinks(currentDrinks.drinks)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            else {\r\n                setRecentDrinks(<span>Not Available</span>);\r\n            }\r\n        }\r\n\r\n\r\n        latestDrinks();\r\n        popularCockItem();\r\n\r\n    }, []);\r\n\r\n\r\n    return {\r\n        ingredientList,\r\n        ingredientCockList,\r\n        categoryList,\r\n        popularCockList,\r\n        ingredientMain, setIngredientMain,\r\n        query, setQuery,\r\n        recentMeal,\r\n        recentDrinks,\r\n    }\r\n\r\n}\r\n\r\nexport default DataSource\r\n",["199","200"],"C:\\Users\\Emml\\cuisine\\src\\index.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\Main.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\FavouriteList.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\Nav.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\Welcome.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\NonAlcohol.js",[],["201","202"],"C:\\Users\\Emml\\cuisine\\src\\components\\RandomGenerator.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\PaginationNonAlcohol.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\IngredientMianPage.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\SingleIngredientPage.js",[],"C:\\Users\\Emml\\cuisine\\src\\humburger\\Close.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\Spinner.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\useLocalStorage.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\FrontPageIngredients.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\FrontPageCategories.js",[],"C:\\Users\\Emml\\cuisine\\src\\cards\\FavouriteCard.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\CategoryMainPage.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\Loader.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\FrontCockIngredient.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\IngredientCockMainPage.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\SingleCockIngredientPage.js",[],"C:\\Users\\Emml\\cuisine\\src\\componentsCocktail\\FrontPageCockCategories.js",[],"C:\\Users\\Emml\\cuisine\\src\\components\\ScrollToTop.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":39,"column":7,"nodeType":"209","messageId":"210","endLine":39,"endColumn":17},{"ruleId":"207","severity":1,"message":"211","line":41,"column":7,"nodeType":"209","messageId":"210","endLine":41,"endColumn":20},{"ruleId":"207","severity":1,"message":"212","line":75,"column":12,"nodeType":"209","messageId":"210","endLine":75,"endColumn":19},{"ruleId":"207","severity":1,"message":"213","line":79,"column":11,"nodeType":"209","messageId":"210","endLine":79,"endColumn":29},{"ruleId":"207","severity":1,"message":"214","line":175,"column":15,"nodeType":"209","messageId":"210","endLine":175,"endColumn":36},{"ruleId":"207","severity":1,"message":"215","line":219,"column":15,"nodeType":"209","messageId":"210","endLine":219,"endColumn":38},{"ruleId":"203","replacedBy":"216"},{"ruleId":"205","replacedBy":"217"},{"ruleId":"203","replacedBy":"218"},{"ruleId":"205","replacedBy":"219"},{"ruleId":"207","severity":1,"message":"220","line":19,"column":12,"nodeType":"209","messageId":"210","endLine":19,"endColumn":15},{"ruleId":"203","replacedBy":"221"},{"ruleId":"205","replacedBy":"222"},{"ruleId":"207","severity":1,"message":"223","line":8,"column":7,"nodeType":"209","messageId":"210","endLine":8,"endColumn":18},{"ruleId":"203","replacedBy":"224"},{"ruleId":"205","replacedBy":"225"},{"ruleId":"203","replacedBy":"226"},{"ruleId":"205","replacedBy":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'AlcoholUrl' is assigned a value but never used.","Identifier","unusedVar","'nonAlcoholUrl' is assigned a value but never used.","'catItem' is assigned a value but never used.","'selectCategoryItem' is assigned a value but never used.","'generateRandomRecipes' is assigned a value but never used.","'generateRandomCocktails' is assigned a value but never used.",["228"],["229"],["228"],["229"],"'img' is assigned a value but never used.",["228"],["229"],"'urlCategory' is assigned a value but never used.",["228"],["229"],["228"],["229"],"no-global-assign","no-unsafe-negation"]